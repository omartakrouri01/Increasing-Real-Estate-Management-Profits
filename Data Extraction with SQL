{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Copyright Jana Schaich Borg/Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# How to Meet and Retrieve Your Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Watershed's intern put together a couple of sources of information that will be useful for your project. These three types of information are contained in the capstone database:\n",
    "1. the current monthly rent Watershed charges for all of their client’s 244 properties, as well as the property type and geographic location of those properties. \n",
    "2. some general information about examples of short-term rental properties.  This information can be used to get a sense of what kind of nightly rental price Watershed’s client’s properties *could* be listed for, if they were converted to short-term rentals.\n",
    "3. records about when those short-term rental properties were rented out, so that you can calculate their occupancy rates.  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Your job is to determine how the database is organized so that you can retrieve all of the available information about Watershed’s client’s 244 properties, as well as the corresponding short-term rental information for comparable properties in the same location and of the same type.\n",
    "1. Start by determining what tables the database contains, and what fields are included in each table.  \n",
    "2. Then, we recommend that you make at least a rough relational schema of how the database is organized, so that you know what fields you can use to join tables. \n",
    "3. Next, make a list of the columns of data you want to retrieve in your final output.  \n",
    "4. Finally, write your query to retrieve the desired data from the database.  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here are some hints about how to write your query:\n",
    "* Start by joining no more than two tables.  After you have made sure the query works as written and that the output makes sense, add other tables one at a time, checking the new query and its results each time.\n",
    "* Your final output should have 244 rows.  Given the limited output, the easiest way to extract the results will be to copy and paste the output from your query into Excel, although you could also extract as a .csv file and open that with Excel.  If you choose the .csv option, you might find it necessary to write your query on multiple lines when you declare it as a variable.  To do this, type a space (if you forget the space the lines will run together) and a \"\\\" at the end of each line of your query:\n",
    "\n",
    "```\n",
    "my_data= %sql SELECT DISTINCT user_guid, state, membership_type \\\n",
    "FROM users \\\n",
    "WHERE country=\"US\" AND state IS NOT NULL and membership_type IS NOT NULL \\\n",
    "ORDER BY state ASC, membership_type ASC ;\n",
    "\n",
    "my_data.csv('my_data.csv')\n",
    "```\n",
    "\n",
    "* We recommend that you calculate the occupancy rates of the example short-term rental properties within MySQL, rather than within Excel (it will be much faster!)  To do this, only examine rental dates during 2015, and remember that there are 365 days in the year.  The final output of your calculation should be the percentage of days in 2015 that the property was occupied.  You may want to consider using a subquery for this calculation.\n",
    "* Make sure that you extract information from short-term rentals <u>**_that have the same location and property type_**</u> as the 244 Watershed properties.\n",
    "* If you run into trouble, use your workbooks and Teradata notes from “Managing Big Data with MySQL” to remind you how to implement different parts of your query.\n",
    "\n",
    "<img src=\"https://duke.box.com/shared/static/svbdzasxe7nncnszps6ewnkr8og4798c.jpg\" width=\"300\" alt=\"SQL Master\"/>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Good luck and have fun!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To get started, connect to the capstone database and set the database as your default database using the following commands:\n",
    "\n",
    "```python\n",
    "%load_ext sql\n",
    "%sql mysql://studentuser:studentpw@mysqlserver/capstone \n",
    "%sql USE capstone\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Load and connect to the database"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The sql extension is already loaded. To reload it, use:\n",
      "  %reload_ext sql\n",
      "0 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%load_ext sql\n",
    "%sql mysql://studentuser:studentpw@mysqlserver/capstone \n",
    "%sql USE capstone"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Queries\n",
    "\n",
    "You can add as many \"cells\" as you need in order to explore the database and extract the appropriate data.  For a reminder about what \"cells\" are, how to add them, or how to use Jupyter in general, please refer to the \"How to Use Jupyter Notebooks\" video at: https://www.coursera.org/learn/analytics-mysql/lecture/oxkUg/how-to-use-jupyter-notebooks."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data Exploratory"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "6 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>Tables_in_capstone</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>location</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>property_type</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>st_property_info</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>st_rental_dates</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>st_rental_prices</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>watershed_property_info</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('location',),\n",
       " ('property_type',),\n",
       " ('st_property_info',),\n",
       " ('st_rental_dates',),\n",
       " ('st_rental_prices',),\n",
       " ('watershed_property_info',)]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SHOW TABLES;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>Field</th>\n",
       "        <th>Type</th>\n",
       "        <th>Null</th>\n",
       "        <th>Key</th>\n",
       "        <th>Default</th>\n",
       "        <th>Extra</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>location_id</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>NO</td>\n",
       "        <td>PRI</td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>city</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>state</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>zipcode</td>\n",
       "        <td>int(5)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('location_id', 'varchar(255)', 'NO', 'PRI', None, ''),\n",
       " ('city', 'varchar(255)', 'YES', '', None, ''),\n",
       " ('state', 'varchar(255)', 'YES', '', None, ''),\n",
       " ('zipcode', 'int(5)', 'YES', '', None, '')]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DESCRIBE location;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>Field</th>\n",
       "        <th>Type</th>\n",
       "        <th>Null</th>\n",
       "        <th>Key</th>\n",
       "        <th>Default</th>\n",
       "        <th>Extra</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>property_type_id</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>NO</td>\n",
       "        <td>PRI</td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>apt_house</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>num_bedrooms</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>kitchen</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>shared</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('property_type_id', 'varchar(255)', 'NO', 'PRI', None, ''),\n",
       " ('apt_house', 'varchar(255)', 'YES', '', None, ''),\n",
       " ('num_bedrooms', 'varchar(255)', 'YES', '', None, ''),\n",
       " ('kitchen', 'varchar(255)', 'YES', '', None, ''),\n",
       " ('shared', 'varchar(255)', 'YES', '', None, '')]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DESCRIBE property_type;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>Field</th>\n",
       "        <th>Type</th>\n",
       "        <th>Null</th>\n",
       "        <th>Key</th>\n",
       "        <th>Default</th>\n",
       "        <th>Extra</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>st_property_id</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>NO</td>\n",
       "        <td>PRI</td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>location</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>property_type</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('st_property_id', 'varchar(255)', 'NO', 'PRI', None, ''),\n",
       " ('location', 'varchar(255)', 'YES', '', None, ''),\n",
       " ('property_type', 'varchar(255)', 'YES', '', None, '')]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DESCRIBE st_property_info;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>Field</th>\n",
       "        <th>Type</th>\n",
       "        <th>Null</th>\n",
       "        <th>Key</th>\n",
       "        <th>Default</th>\n",
       "        <th>Extra</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>rental_date</td>\n",
       "        <td>date</td>\n",
       "        <td>NO</td>\n",
       "        <td>PRI</td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>st_property</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>NO</td>\n",
       "        <td>PRI</td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('rental_date', 'date', 'NO', 'PRI', None, ''),\n",
       " ('st_property', 'varchar(255)', 'NO', 'PRI', None, '')]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DESCRIBE st_rental_dates;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>Field</th>\n",
       "        <th>Type</th>\n",
       "        <th>Null</th>\n",
       "        <th>Key</th>\n",
       "        <th>Default</th>\n",
       "        <th>Extra</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>location</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>NO</td>\n",
       "        <td>PRI</td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>property_type</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>NO</td>\n",
       "        <td>PRI</td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>percentile_10th_price</td>\n",
       "        <td>int(11)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>percentile_90th_price</td>\n",
       "        <td>int(11)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>sample_nightly_rent_price</td>\n",
       "        <td>int(11)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('location', 'varchar(255)', 'NO', 'PRI', None, ''),\n",
       " ('property_type', 'varchar(255)', 'NO', 'PRI', None, ''),\n",
       " ('percentile_10th_price', 'int(11)', 'YES', '', None, ''),\n",
       " ('percentile_90th_price', 'int(11)', 'YES', '', None, ''),\n",
       " ('sample_nightly_rent_price', 'int(11)', 'YES', '', None, '')]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DESCRIBE st_rental_prices;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>Field</th>\n",
       "        <th>Type</th>\n",
       "        <th>Null</th>\n",
       "        <th>Key</th>\n",
       "        <th>Default</th>\n",
       "        <th>Extra</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ws_property_id</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>NO</td>\n",
       "        <td>PRI</td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>location</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>property_type</td>\n",
       "        <td>varchar(255)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>current_monthly_rent</td>\n",
       "        <td>int(11)</td>\n",
       "        <td>NO</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('ws_property_id', 'varchar(255)', 'NO', 'PRI', None, ''),\n",
       " ('location', 'varchar(255)', 'YES', '', None, ''),\n",
       " ('property_type', 'varchar(255)', 'YES', '', None, ''),\n",
       " ('current_monthly_rent', 'int(11)', 'NO', '', None, '')]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DESCRIBE watershed_property_info;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>location_id</th>\n",
       "        <th>city</th>\n",
       "        <th>state</th>\n",
       "        <th>zipcode</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>L1</td>\n",
       "        <td>Anchorage</td>\n",
       "        <td>AK</td>\n",
       "        <td>99501</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>L10</td>\n",
       "        <td>Anchorage</td>\n",
       "        <td>AK</td>\n",
       "        <td>99518</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>L100</td>\n",
       "        <td>Cherokee</td>\n",
       "        <td>AL</td>\n",
       "        <td>35616</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>L1000</td>\n",
       "        <td>Azusa</td>\n",
       "        <td>CA</td>\n",
       "        <td>91702</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>L10000</td>\n",
       "        <td>Winston-Sa</td>\n",
       "        <td>NC</td>\n",
       "        <td>27101</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('L1', 'Anchorage', 'AK', 99501),\n",
       " ('L10', 'Anchorage', 'AK', 99518),\n",
       " ('L100', 'Cherokee', 'AL', 35616),\n",
       " ('L1000', 'Azusa', 'CA', 91702),\n",
       " ('L10000', 'Winston-Sa', 'NC', 27101)]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT *\n",
    "FROM location\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "51 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>state</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>AK</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>AL</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>CA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ND</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NH</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NJ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>OH</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>OK</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>OR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>RI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>SC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>SD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>TN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>TX</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>UT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>VA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>VT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>WA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>WI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>WV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>WY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>CO</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>CT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>DC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>DE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>FL</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>GA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>HI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>IA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>AR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ID</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>IL</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>IN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>KS</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>KY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>LA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>MA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>AZ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>MD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ME</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>MI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>MN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>MO</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>MS</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>MT</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('AK',),\n",
       " ('AL',),\n",
       " ('CA',),\n",
       " ('NC',),\n",
       " ('ND',),\n",
       " ('NE',),\n",
       " ('NH',),\n",
       " ('NJ',),\n",
       " ('NM',),\n",
       " ('NV',),\n",
       " ('NY',),\n",
       " ('OH',),\n",
       " ('OK',),\n",
       " ('OR',),\n",
       " ('PA',),\n",
       " ('RI',),\n",
       " ('SC',),\n",
       " ('SD',),\n",
       " ('TN',),\n",
       " ('TX',),\n",
       " ('UT',),\n",
       " ('VA',),\n",
       " ('VT',),\n",
       " ('WA',),\n",
       " ('WI',),\n",
       " ('WV',),\n",
       " ('WY',),\n",
       " ('CO',),\n",
       " ('CT',),\n",
       " ('DC',),\n",
       " ('DE',),\n",
       " ('FL',),\n",
       " ('GA',),\n",
       " ('HI',),\n",
       " ('IA',),\n",
       " ('AR',),\n",
       " ('ID',),\n",
       " ('IL',),\n",
       " ('IN',),\n",
       " ('KS',),\n",
       " ('KY',),\n",
       " ('LA',),\n",
       " ('MA',),\n",
       " ('AZ',),\n",
       " ('MD',),\n",
       " ('ME',),\n",
       " ('MI',),\n",
       " ('MN',),\n",
       " ('MO',),\n",
       " ('MS',),\n",
       " ('MT',)]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT DISTINCT state\n",
    "FROM location;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>property_type_id</th>\n",
       "        <th>apt_house</th>\n",
       "        <th>num_bedrooms</th>\n",
       "        <th>kitchen</th>\n",
       "        <th>shared</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R1</td>\n",
       "        <td>apartment</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R10</td>\n",
       "        <td>house</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R11</td>\n",
       "        <td>house</td>\n",
       "        <td>1</td>\n",
       "        <td>N</td>\n",
       "        <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R12</td>\n",
       "        <td>house</td>\n",
       "        <td>1</td>\n",
       "        <td>N</td>\n",
       "        <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R13</td>\n",
       "        <td>house</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>Y</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('R1', 'apartment', '1', 'Y', 'Y'),\n",
       " ('R10', 'house', '1', 'Y', 'N'),\n",
       " ('R11', 'house', '1', 'N', 'Y'),\n",
       " ('R12', 'house', '1', 'N', 'N'),\n",
       " ('R13', 'house', '2', 'Y', 'Y')]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT *\n",
    "FROM property_type\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>apt_house</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>apartment</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>house</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('apartment',), ('house',)]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT DISTINCT apt_house\n",
    "FROM property_type;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>num_bedrooms</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('1',), ('2',)]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT DISTINCT num_bedrooms\n",
    "FROM property_type;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>kitchen</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>N</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('Y',), ('N',)]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT DISTINCT kitchen\t\n",
    "FROM property_type;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>shared</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>N</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('Y',), ('N',)]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT DISTINCT shared\n",
    "FROM property_type;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>st_property_id</th>\n",
       "        <th>location</th>\n",
       "        <th>property_type</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST1</td>\n",
       "        <td>L9531</td>\n",
       "        <td>R6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST10</td>\n",
       "        <td>L9533</td>\n",
       "        <td>R6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST100</td>\n",
       "        <td>L1944</td>\n",
       "        <td>R2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST1000</td>\n",
       "        <td>L5957</td>\n",
       "        <td>R1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST101</td>\n",
       "        <td>L15257</td>\n",
       "        <td>R2</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('ST1', 'L9531', 'R6'),\n",
       " ('ST10', 'L9533', 'R6'),\n",
       " ('ST100', 'L1944', 'R2'),\n",
       " ('ST1000', 'L5957', 'R1'),\n",
       " ('ST101', 'L15257', 'R2')]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT *\n",
    "FROM st_property_info\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>rental_date</th>\n",
       "        <th>st_property</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2014-01-31</td>\n",
       "        <td>ST100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2014-01-31</td>\n",
       "        <td>ST106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2014-01-31</td>\n",
       "        <td>ST107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2014-01-31</td>\n",
       "        <td>ST109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2014-01-31</td>\n",
       "        <td>ST113</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(datetime.date(2014, 1, 31), 'ST100'),\n",
       " (datetime.date(2014, 1, 31), 'ST106'),\n",
       " (datetime.date(2014, 1, 31), 'ST107'),\n",
       " (datetime.date(2014, 1, 31), 'ST109'),\n",
       " (datetime.date(2014, 1, 31), 'ST113')]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT *\n",
    "FROM st_rental_dates\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>rental_date</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2014-01-31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2014-01-31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2014-01-31</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(datetime.date(2014, 1, 31),),\n",
       " (datetime.date(2014, 1, 31),),\n",
       " (datetime.date(2014, 1, 31),)]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT rental_date\n",
    "FROM st_rental_dates\n",
    "ORDER BY rental_date ASC\n",
    "LIMIT 3;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>rental_date</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2015-12-31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2015-12-31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2015-12-31</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(datetime.date(2015, 12, 31),),\n",
       " (datetime.date(2015, 12, 31),),\n",
       " (datetime.date(2015, 12, 31),)]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT rental_date\n",
    "FROM st_rental_dates\n",
    "ORDER BY rental_date DESC\n",
    "LIMIT 3;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>location</th>\n",
       "        <th>property_type</th>\n",
       "        <th>percentile_10th_price</th>\n",
       "        <th>percentile_90th_price</th>\n",
       "        <th>sample_nightly_rent_price</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>L10126</td>\n",
       "        <td>R1</td>\n",
       "        <td>83</td>\n",
       "        <td>273</td>\n",
       "        <td>192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>L10126</td>\n",
       "        <td>R10</td>\n",
       "        <td>155</td>\n",
       "        <td>494</td>\n",
       "        <td>257</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>L10126</td>\n",
       "        <td>R11</td>\n",
       "        <td>82</td>\n",
       "        <td>411</td>\n",
       "        <td>242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>L10126</td>\n",
       "        <td>R12</td>\n",
       "        <td>119</td>\n",
       "        <td>366</td>\n",
       "        <td>229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>L10126</td>\n",
       "        <td>R13</td>\n",
       "        <td>137</td>\n",
       "        <td>416</td>\n",
       "        <td>375</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('L10126', 'R1', 83, 273, 192),\n",
       " ('L10126', 'R10', 155, 494, 257),\n",
       " ('L10126', 'R11', 82, 411, 242),\n",
       " ('L10126', 'R12', 119, 366, 229),\n",
       " ('L10126', 'R13', 137, 416, 375)]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT *\n",
    "FROM st_rental_prices\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>sample_nightly_rent_price</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>69</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(50,), (52,), (58,), (59,), (69,)]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT sample_nightly_rent_price\n",
    "FROM st_rental_prices\n",
    "ORDER BY sample_nightly_rent_price ASC\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>sample_nightly_rent_price</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1615</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1595</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1477</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1464</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1265</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1615,), (1595,), (1477,), (1464,), (1265,)]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT sample_nightly_rent_price\n",
    "FROM st_rental_prices\n",
    "ORDER BY sample_nightly_rent_price DESC\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>ws_property_id</th>\n",
       "        <th>location</th>\n",
       "        <th>property_type</th>\n",
       "        <th>current_monthly_rent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W1</td>\n",
       "        <td>L9531</td>\n",
       "        <td>R6</td>\n",
       "        <td>1060</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W10</td>\n",
       "        <td>L9533</td>\n",
       "        <td>R6</td>\n",
       "        <td>1200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W100</td>\n",
       "        <td>L1944</td>\n",
       "        <td>R2</td>\n",
       "        <td>3300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W101</td>\n",
       "        <td>L15257</td>\n",
       "        <td>R2</td>\n",
       "        <td>1400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W102</td>\n",
       "        <td>L15257</td>\n",
       "        <td>R6</td>\n",
       "        <td>2000</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('W1', 'L9531', 'R6', 1060),\n",
       " ('W10', 'L9533', 'R6', 1200),\n",
       " ('W100', 'L1944', 'R2', 3300),\n",
       " ('W101', 'L15257', 'R2', 1400),\n",
       " ('W102', 'L15257', 'R6', 2000)]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT *\n",
    "FROM watershed_property_info\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>current_monthly_rent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>700</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(500,), (600,), (650,), (700,), (700,)]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT current_monthly_rent\n",
    "FROM watershed_property_info\n",
    "ORDER BY current_monthly_rent ASC\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>current_monthly_rent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>6000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5500</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(6000,), (5600,), (5600,), (5500,), (5500,)]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT current_monthly_rent\n",
    "FROM watershed_property_info\n",
    "ORDER BY current_monthly_rent DESC\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Short-term Property Infomation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>st_property_id</th>\n",
       "        <th>city</th>\n",
       "        <th>state</th>\n",
       "        <th>apt_house</th>\n",
       "        <th>num_bedrooms</th>\n",
       "        <th>kitchen</th>\n",
       "        <th>shared</th>\n",
       "        <th>sample_nightly_rent_price</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST1</td>\n",
       "        <td>Chapel Hill</td>\n",
       "        <td>NC</td>\n",
       "        <td>apartment</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST10</td>\n",
       "        <td>Chapel Hill</td>\n",
       "        <td>NC</td>\n",
       "        <td>apartment</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST100</td>\n",
       "        <td>San Francisco</td>\n",
       "        <td>CA</td>\n",
       "        <td>apartment</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>372</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST101</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>apartment</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>302</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST102</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>apartment</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST103</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>house</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST104</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>house</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST105</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>apartment</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>386</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST106</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>apartment</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST107</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>house</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>969</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('ST1', 'Chapel Hill', 'NC', 'apartment', '2', 'Y', 'N', 148),\n",
       " ('ST10', 'Chapel Hill', 'NC', 'apartment', '2', 'Y', 'N', 133),\n",
       " ('ST100', 'San Francisco', 'CA', 'apartment', '1', 'Y', 'N', 372),\n",
       " ('ST101', 'Austin', 'TX', 'apartment', '1', 'Y', 'N', 302),\n",
       " ('ST102', 'Austin', 'TX', 'apartment', '2', 'Y', 'N', 429),\n",
       " ('ST103', 'Austin', 'TX', 'house', '1', 'Y', 'N', 380),\n",
       " ('ST104', 'Austin', 'TX', 'house', '2', 'Y', 'N', 374),\n",
       " ('ST105', 'Austin', 'TX', 'apartment', '1', 'Y', 'N', 386),\n",
       " ('ST106', 'Austin', 'TX', 'apartment', '2', 'Y', 'N', 212),\n",
       " ('ST107', 'Austin', 'TX', 'house', '1', 'Y', 'N', 969)]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "Select st_property_id, city, state, apt_house, num_bedrooms, kitchen, shared, sample_nightly_rent_price\n",
    "FROM st_property_info si\n",
    "JOIN location l\n",
    "ON si.location = l.location_id\n",
    "JOIN property_type t\n",
    "ON si.property_type = t.property_type_id\n",
    "JOIN st_rental_prices sp\n",
    "ON si.location = sp.location AND si.property_type = sp.property_type\n",
    "LIMIT 10;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Watershed Property Infomation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>ws_property_id</th>\n",
       "        <th>city</th>\n",
       "        <th>state</th>\n",
       "        <th>apt_house</th>\n",
       "        <th>num_bedrooms</th>\n",
       "        <th>kitchen</th>\n",
       "        <th>shared</th>\n",
       "        <th>current_monthly_rent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W1</td>\n",
       "        <td>Chapel Hill</td>\n",
       "        <td>NC</td>\n",
       "        <td>apartment</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1060</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W10</td>\n",
       "        <td>Chapel Hill</td>\n",
       "        <td>NC</td>\n",
       "        <td>apartment</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W100</td>\n",
       "        <td>San Francisco</td>\n",
       "        <td>CA</td>\n",
       "        <td>apartment</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>3300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W101</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>apartment</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W102</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>apartment</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>2000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W103</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>house</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W104</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>house</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>2800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W105</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>apartment</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W106</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>apartment</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W107</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>house</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1800</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('W1', 'Chapel Hill', 'NC', 'apartment', '2', 'Y', 'N', 1060),\n",
       " ('W10', 'Chapel Hill', 'NC', 'apartment', '2', 'Y', 'N', 1200),\n",
       " ('W100', 'San Francisco', 'CA', 'apartment', '1', 'Y', 'N', 3300),\n",
       " ('W101', 'Austin', 'TX', 'apartment', '1', 'Y', 'N', 1400),\n",
       " ('W102', 'Austin', 'TX', 'apartment', '2', 'Y', 'N', 2000),\n",
       " ('W103', 'Austin', 'TX', 'house', '1', 'Y', 'N', 1600),\n",
       " ('W104', 'Austin', 'TX', 'house', '2', 'Y', 'N', 2800),\n",
       " ('W105', 'Austin', 'TX', 'apartment', '1', 'Y', 'N', 1100),\n",
       " ('W106', 'Austin', 'TX', 'apartment', '2', 'Y', 'N', 1900),\n",
       " ('W107', 'Austin', 'TX', 'house', '1', 'Y', 'N', 1800)]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT ws_property_id, city, state, apt_house, num_bedrooms, kitchen, shared, current_monthly_rent\n",
    "FROM watershed_property_info wi\n",
    "JOIN location l\n",
    "ON wi.location = l.location_id\n",
    "JOIN property_type t\n",
    "ON wi.property_type = t.property_type_id\n",
    "LIMIT 10;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "## Nightly Rent Prices for Watershed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "20 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>ws_property_id</th>\n",
       "        <th>location</th>\n",
       "        <th>property_type</th>\n",
       "        <th>current_monthly_rent</th>\n",
       "        <th>percentile_10th_price</th>\n",
       "        <th>percentile_90th_price</th>\n",
       "        <th>sample_nightly_rent_price</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W1</td>\n",
       "        <td>L9531</td>\n",
       "        <td>R6</td>\n",
       "        <td>1060</td>\n",
       "        <td>114</td>\n",
       "        <td>153</td>\n",
       "        <td>148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W10</td>\n",
       "        <td>L9533</td>\n",
       "        <td>R6</td>\n",
       "        <td>1200</td>\n",
       "        <td>111</td>\n",
       "        <td>149</td>\n",
       "        <td>133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W100</td>\n",
       "        <td>L1944</td>\n",
       "        <td>R2</td>\n",
       "        <td>3300</td>\n",
       "        <td>108</td>\n",
       "        <td>610</td>\n",
       "        <td>372</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W101</td>\n",
       "        <td>L15257</td>\n",
       "        <td>R2</td>\n",
       "        <td>1400</td>\n",
       "        <td>178</td>\n",
       "        <td>533</td>\n",
       "        <td>302</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W102</td>\n",
       "        <td>L15257</td>\n",
       "        <td>R6</td>\n",
       "        <td>2000</td>\n",
       "        <td>221</td>\n",
       "        <td>617</td>\n",
       "        <td>429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W103</td>\n",
       "        <td>L15257</td>\n",
       "        <td>R10</td>\n",
       "        <td>1600</td>\n",
       "        <td>202</td>\n",
       "        <td>646</td>\n",
       "        <td>380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W104</td>\n",
       "        <td>L15257</td>\n",
       "        <td>R14</td>\n",
       "        <td>2800</td>\n",
       "        <td>197</td>\n",
       "        <td>639</td>\n",
       "        <td>374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W105</td>\n",
       "        <td>L15260</td>\n",
       "        <td>R2</td>\n",
       "        <td>1100</td>\n",
       "        <td>114</td>\n",
       "        <td>477</td>\n",
       "        <td>386</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W106</td>\n",
       "        <td>L15260</td>\n",
       "        <td>R6</td>\n",
       "        <td>1900</td>\n",
       "        <td>80</td>\n",
       "        <td>583</td>\n",
       "        <td>212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W107</td>\n",
       "        <td>L15260</td>\n",
       "        <td>R10</td>\n",
       "        <td>1800</td>\n",
       "        <td>239</td>\n",
       "        <td>1431</td>\n",
       "        <td>969</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W108</td>\n",
       "        <td>L15260</td>\n",
       "        <td>R14</td>\n",
       "        <td>3200</td>\n",
       "        <td>236</td>\n",
       "        <td>1533</td>\n",
       "        <td>885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W109</td>\n",
       "        <td>L15264</td>\n",
       "        <td>R2</td>\n",
       "        <td>1000</td>\n",
       "        <td>138</td>\n",
       "        <td>550</td>\n",
       "        <td>287</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W11</td>\n",
       "        <td>L9533</td>\n",
       "        <td>R10</td>\n",
       "        <td>1000</td>\n",
       "        <td>116</td>\n",
       "        <td>296</td>\n",
       "        <td>206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W110</td>\n",
       "        <td>L15264</td>\n",
       "        <td>R6</td>\n",
       "        <td>1300</td>\n",
       "        <td>175</td>\n",
       "        <td>917</td>\n",
       "        <td>462</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W111</td>\n",
       "        <td>L15264</td>\n",
       "        <td>R10</td>\n",
       "        <td>1200</td>\n",
       "        <td>130</td>\n",
       "        <td>821</td>\n",
       "        <td>389</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W112</td>\n",
       "        <td>L15264</td>\n",
       "        <td>R14</td>\n",
       "        <td>1600</td>\n",
       "        <td>241</td>\n",
       "        <td>866</td>\n",
       "        <td>678</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W113</td>\n",
       "        <td>L15278</td>\n",
       "        <td>R2</td>\n",
       "        <td>800</td>\n",
       "        <td>134</td>\n",
       "        <td>288</td>\n",
       "        <td>163</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W114</td>\n",
       "        <td>L15278</td>\n",
       "        <td>R6</td>\n",
       "        <td>1200</td>\n",
       "        <td>234</td>\n",
       "        <td>794</td>\n",
       "        <td>374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W115</td>\n",
       "        <td>L15278</td>\n",
       "        <td>R10</td>\n",
       "        <td>900</td>\n",
       "        <td>252</td>\n",
       "        <td>547</td>\n",
       "        <td>444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W116</td>\n",
       "        <td>L15278</td>\n",
       "        <td>R14</td>\n",
       "        <td>1100</td>\n",
       "        <td>246</td>\n",
       "        <td>616</td>\n",
       "        <td>426</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('W1', 'L9531', 'R6', 1060, 114, 153, 148),\n",
       " ('W10', 'L9533', 'R6', 1200, 111, 149, 133),\n",
       " ('W100', 'L1944', 'R2', 3300, 108, 610, 372),\n",
       " ('W101', 'L15257', 'R2', 1400, 178, 533, 302),\n",
       " ('W102', 'L15257', 'R6', 2000, 221, 617, 429),\n",
       " ('W103', 'L15257', 'R10', 1600, 202, 646, 380),\n",
       " ('W104', 'L15257', 'R14', 2800, 197, 639, 374),\n",
       " ('W105', 'L15260', 'R2', 1100, 114, 477, 386),\n",
       " ('W106', 'L15260', 'R6', 1900, 80, 583, 212),\n",
       " ('W107', 'L15260', 'R10', 1800, 239, 1431, 969),\n",
       " ('W108', 'L15260', 'R14', 3200, 236, 1533, 885),\n",
       " ('W109', 'L15264', 'R2', 1000, 138, 550, 287),\n",
       " ('W11', 'L9533', 'R10', 1000, 116, 296, 206),\n",
       " ('W110', 'L15264', 'R6', 1300, 175, 917, 462),\n",
       " ('W111', 'L15264', 'R10', 1200, 130, 821, 389),\n",
       " ('W112', 'L15264', 'R14', 1600, 241, 866, 678),\n",
       " ('W113', 'L15278', 'R2', 800, 134, 288, 163),\n",
       " ('W114', 'L15278', 'R6', 1200, 234, 794, 374),\n",
       " ('W115', 'L15278', 'R10', 900, 252, 547, 444),\n",
       " ('W116', 'L15278', 'R14', 1100, 246, 616, 426)]"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT wi.ws_property_id, wi.location, wi.property_type, wi.current_monthly_rent,\n",
    "       sp.percentile_10th_price, sp.percentile_90th_price, sp.sample_nightly_rent_price\n",
    "FROM watershed_property_info wi\n",
    "JOIN st_rental_prices sp\n",
    "ON wi.location = sp.location AND wi.property_type = sp.property_type\n",
    "LIMIT 20;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Occupancy Rates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "20 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>st_property</th>\n",
       "        <th>occupancy_rates_2014</th>\n",
       "        <th>occupancy_rates_2015</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST1</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.1616</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST10</td>\n",
       "        <td>0.1041</td>\n",
       "        <td>0.3479</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST100</td>\n",
       "        <td>0.0904</td>\n",
       "        <td>0.3973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST1000</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.9808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST101</td>\n",
       "        <td>0.1096</td>\n",
       "        <td>0.3644</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST102</td>\n",
       "        <td>0.0904</td>\n",
       "        <td>0.4110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST103</td>\n",
       "        <td>0.1123</td>\n",
       "        <td>0.4110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST104</td>\n",
       "        <td>0.1068</td>\n",
       "        <td>0.5260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST105</td>\n",
       "        <td>0.1589</td>\n",
       "        <td>0.4329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST106</td>\n",
       "        <td>0.1205</td>\n",
       "        <td>0.6959</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST107</td>\n",
       "        <td>0.2000</td>\n",
       "        <td>0.1096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST108</td>\n",
       "        <td>0.0356</td>\n",
       "        <td>0.2247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST109</td>\n",
       "        <td>0.0630</td>\n",
       "        <td>0.2192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST11</td>\n",
       "        <td>0.1041</td>\n",
       "        <td>0.3918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST110</td>\n",
       "        <td>0.0438</td>\n",
       "        <td>0.5370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST111</td>\n",
       "        <td>0.1534</td>\n",
       "        <td>0.5123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST112</td>\n",
       "        <td>0.1288</td>\n",
       "        <td>0.3616</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST113</td>\n",
       "        <td>0.1096</td>\n",
       "        <td>0.8438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST114</td>\n",
       "        <td>0.2219</td>\n",
       "        <td>0.9151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST115</td>\n",
       "        <td>0.2301</td>\n",
       "        <td>0.4301</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('ST1', Decimal('0.0000'), Decimal('0.1616')),\n",
       " ('ST10', Decimal('0.1041'), Decimal('0.3479')),\n",
       " ('ST100', Decimal('0.0904'), Decimal('0.3973')),\n",
       " ('ST1000', Decimal('0.0000'), Decimal('0.9808')),\n",
       " ('ST101', Decimal('0.1096'), Decimal('0.3644')),\n",
       " ('ST102', Decimal('0.0904'), Decimal('0.4110')),\n",
       " ('ST103', Decimal('0.1123'), Decimal('0.4110')),\n",
       " ('ST104', Decimal('0.1068'), Decimal('0.5260')),\n",
       " ('ST105', Decimal('0.1589'), Decimal('0.4329')),\n",
       " ('ST106', Decimal('0.1205'), Decimal('0.6959')),\n",
       " ('ST107', Decimal('0.2000'), Decimal('0.1096')),\n",
       " ('ST108', Decimal('0.0356'), Decimal('0.2247')),\n",
       " ('ST109', Decimal('0.0630'), Decimal('0.2192')),\n",
       " ('ST11', Decimal('0.1041'), Decimal('0.3918')),\n",
       " ('ST110', Decimal('0.0438'), Decimal('0.5370')),\n",
       " ('ST111', Decimal('0.1534'), Decimal('0.5123')),\n",
       " ('ST112', Decimal('0.1288'), Decimal('0.3616')),\n",
       " ('ST113', Decimal('0.1096'), Decimal('0.8438')),\n",
       " ('ST114', Decimal('0.2219'), Decimal('0.9151')),\n",
       " ('ST115', Decimal('0.2301'), Decimal('0.4301'))]"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT st_property, \n",
    "       SUM(CASE WHEN YEAR(rental_date) = '2014' THEN 1 ELSE 0 END) / 365 AS occupancy_rates_2014, \n",
    "       SUM(CASE WHEN YEAR(rental_date) = '2015' THEN 1 ELSE 0 END) / 365 AS occupancy_rates_2015\n",
    "FROM st_rental_dates\n",
    "GROUP BY st_property\n",
    "LIMIT 20;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>st_property</th>\n",
       "        <th>year</th>\n",
       "        <th>occupancy_rate</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST364</td>\n",
       "        <td>2014</td>\n",
       "        <td>0.0055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST6</td>\n",
       "        <td>2014</td>\n",
       "        <td>0.0164</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST184</td>\n",
       "        <td>2014</td>\n",
       "        <td>0.0164</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST154</td>\n",
       "        <td>2014</td>\n",
       "        <td>0.0192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST363</td>\n",
       "        <td>2015</td>\n",
       "        <td>0.0192</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('ST364', 2014, Decimal('0.0055')),\n",
       " ('ST6', 2014, Decimal('0.0164')),\n",
       " ('ST184', 2014, Decimal('0.0164')),\n",
       " ('ST154', 2014, Decimal('0.0192')),\n",
       " ('ST363', 2015, Decimal('0.0192'))]"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT st_property, YEAR(rental_date) AS year, COUNT(rental_date) / 365 AS occupancy_rate\n",
    "FROM st_rental_dates\n",
    "GROUP BY st_property, year\n",
    "ORDER BY occupancy_rate ASC\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>st_property</th>\n",
       "        <th>year</th>\n",
       "        <th>occupancy_rate</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST623</td>\n",
       "        <td>2015</td>\n",
       "        <td>0.9973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST997</td>\n",
       "        <td>2015</td>\n",
       "        <td>0.9945</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST525</td>\n",
       "        <td>2015</td>\n",
       "        <td>0.9945</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST809</td>\n",
       "        <td>2015</td>\n",
       "        <td>0.9945</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST544</td>\n",
       "        <td>2015</td>\n",
       "        <td>0.9945</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('ST623', 2015, Decimal('0.9973')),\n",
       " ('ST997', 2015, Decimal('0.9945')),\n",
       " ('ST525', 2015, Decimal('0.9945')),\n",
       " ('ST809', 2015, Decimal('0.9945')),\n",
       " ('ST544', 2015, Decimal('0.9945'))]"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT st_property, YEAR(rental_date) AS year, COUNT(rental_date) / 365 AS occupancy_rate\n",
    "FROM st_rental_dates\n",
    "GROUP BY st_property, year\n",
    "ORDER BY occupancy_rate DESC\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "20 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>st_property</th>\n",
       "        <th>location</th>\n",
       "        <th>property_type</th>\n",
       "        <th>occupancy_rates_2014</th>\n",
       "        <th>occupancy_rates_2015</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST1</td>\n",
       "        <td>L9531</td>\n",
       "        <td>R6</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.1616</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST10</td>\n",
       "        <td>L9533</td>\n",
       "        <td>R6</td>\n",
       "        <td>0.1041</td>\n",
       "        <td>0.3479</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST100</td>\n",
       "        <td>L1944</td>\n",
       "        <td>R2</td>\n",
       "        <td>0.0904</td>\n",
       "        <td>0.3973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST1000</td>\n",
       "        <td>L5957</td>\n",
       "        <td>R1</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.9808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST101</td>\n",
       "        <td>L15257</td>\n",
       "        <td>R2</td>\n",
       "        <td>0.1096</td>\n",
       "        <td>0.3644</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST102</td>\n",
       "        <td>L15257</td>\n",
       "        <td>R6</td>\n",
       "        <td>0.0904</td>\n",
       "        <td>0.4110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST103</td>\n",
       "        <td>L15257</td>\n",
       "        <td>R10</td>\n",
       "        <td>0.1123</td>\n",
       "        <td>0.4110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST104</td>\n",
       "        <td>L15257</td>\n",
       "        <td>R14</td>\n",
       "        <td>0.1068</td>\n",
       "        <td>0.5260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST105</td>\n",
       "        <td>L15260</td>\n",
       "        <td>R2</td>\n",
       "        <td>0.1589</td>\n",
       "        <td>0.4329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST106</td>\n",
       "        <td>L15260</td>\n",
       "        <td>R6</td>\n",
       "        <td>0.1205</td>\n",
       "        <td>0.6959</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST107</td>\n",
       "        <td>L15260</td>\n",
       "        <td>R10</td>\n",
       "        <td>0.2000</td>\n",
       "        <td>0.1096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST108</td>\n",
       "        <td>L15260</td>\n",
       "        <td>R14</td>\n",
       "        <td>0.0356</td>\n",
       "        <td>0.2247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST109</td>\n",
       "        <td>L15264</td>\n",
       "        <td>R2</td>\n",
       "        <td>0.0630</td>\n",
       "        <td>0.2192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST11</td>\n",
       "        <td>L9533</td>\n",
       "        <td>R10</td>\n",
       "        <td>0.1041</td>\n",
       "        <td>0.3918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST110</td>\n",
       "        <td>L15264</td>\n",
       "        <td>R6</td>\n",
       "        <td>0.0438</td>\n",
       "        <td>0.5370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST111</td>\n",
       "        <td>L15264</td>\n",
       "        <td>R10</td>\n",
       "        <td>0.1534</td>\n",
       "        <td>0.5123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST112</td>\n",
       "        <td>L15264</td>\n",
       "        <td>R14</td>\n",
       "        <td>0.1288</td>\n",
       "        <td>0.3616</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST113</td>\n",
       "        <td>L15278</td>\n",
       "        <td>R2</td>\n",
       "        <td>0.1096</td>\n",
       "        <td>0.8438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST114</td>\n",
       "        <td>L15278</td>\n",
       "        <td>R6</td>\n",
       "        <td>0.2219</td>\n",
       "        <td>0.9151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ST115</td>\n",
       "        <td>L15278</td>\n",
       "        <td>R10</td>\n",
       "        <td>0.2301</td>\n",
       "        <td>0.4301</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('ST1', 'L9531', 'R6', Decimal('0.0000'), Decimal('0.1616')),\n",
       " ('ST10', 'L9533', 'R6', Decimal('0.1041'), Decimal('0.3479')),\n",
       " ('ST100', 'L1944', 'R2', Decimal('0.0904'), Decimal('0.3973')),\n",
       " ('ST1000', 'L5957', 'R1', Decimal('0.0000'), Decimal('0.9808')),\n",
       " ('ST101', 'L15257', 'R2', Decimal('0.1096'), Decimal('0.3644')),\n",
       " ('ST102', 'L15257', 'R6', Decimal('0.0904'), Decimal('0.4110')),\n",
       " ('ST103', 'L15257', 'R10', Decimal('0.1123'), Decimal('0.4110')),\n",
       " ('ST104', 'L15257', 'R14', Decimal('0.1068'), Decimal('0.5260')),\n",
       " ('ST105', 'L15260', 'R2', Decimal('0.1589'), Decimal('0.4329')),\n",
       " ('ST106', 'L15260', 'R6', Decimal('0.1205'), Decimal('0.6959')),\n",
       " ('ST107', 'L15260', 'R10', Decimal('0.2000'), Decimal('0.1096')),\n",
       " ('ST108', 'L15260', 'R14', Decimal('0.0356'), Decimal('0.2247')),\n",
       " ('ST109', 'L15264', 'R2', Decimal('0.0630'), Decimal('0.2192')),\n",
       " ('ST11', 'L9533', 'R10', Decimal('0.1041'), Decimal('0.3918')),\n",
       " ('ST110', 'L15264', 'R6', Decimal('0.0438'), Decimal('0.5370')),\n",
       " ('ST111', 'L15264', 'R10', Decimal('0.1534'), Decimal('0.5123')),\n",
       " ('ST112', 'L15264', 'R14', Decimal('0.1288'), Decimal('0.3616')),\n",
       " ('ST113', 'L15278', 'R2', Decimal('0.1096'), Decimal('0.8438')),\n",
       " ('ST114', 'L15278', 'R6', Decimal('0.2219'), Decimal('0.9151')),\n",
       " ('ST115', 'L15278', 'R10', Decimal('0.2301'), Decimal('0.4301'))]"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT st_property, location, property_type, \n",
    "       SUM(CASE WHEN YEAR(rental_date) = '2014' THEN 1 ELSE 0 END) / 365 AS occupancy_rates_2014, \n",
    "       SUM(CASE WHEN YEAR(rental_date) = '2015' THEN 1 ELSE 0 END) / 365 AS occupancy_rates_2015\n",
    "FROM st_rental_dates sd\n",
    "JOIN st_property_info si\n",
    "ON sd.st_property = si.st_property_id\n",
    "GROUP BY st_property\n",
    "LIMIT 20;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "20 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>ws_property_id</th>\n",
       "        <th>occupancy_rates_2014</th>\n",
       "        <th>occupancy_rates_2015</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W1</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.1616</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W10</td>\n",
       "        <td>0.1041</td>\n",
       "        <td>0.3479</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W100</td>\n",
       "        <td>0.0904</td>\n",
       "        <td>0.3973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W101</td>\n",
       "        <td>0.1096</td>\n",
       "        <td>0.3644</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W102</td>\n",
       "        <td>0.0904</td>\n",
       "        <td>0.4110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W103</td>\n",
       "        <td>0.1123</td>\n",
       "        <td>0.4110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W104</td>\n",
       "        <td>0.1068</td>\n",
       "        <td>0.5260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W105</td>\n",
       "        <td>0.1589</td>\n",
       "        <td>0.4329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W106</td>\n",
       "        <td>0.1205</td>\n",
       "        <td>0.6959</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W107</td>\n",
       "        <td>0.2000</td>\n",
       "        <td>0.1096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W108</td>\n",
       "        <td>0.0356</td>\n",
       "        <td>0.2247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W109</td>\n",
       "        <td>0.0630</td>\n",
       "        <td>0.2192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W11</td>\n",
       "        <td>0.1041</td>\n",
       "        <td>0.3918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W110</td>\n",
       "        <td>0.0438</td>\n",
       "        <td>0.5370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W111</td>\n",
       "        <td>0.1534</td>\n",
       "        <td>0.5123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W112</td>\n",
       "        <td>0.1288</td>\n",
       "        <td>0.3616</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W113</td>\n",
       "        <td>0.1096</td>\n",
       "        <td>0.8438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W114</td>\n",
       "        <td>0.2219</td>\n",
       "        <td>0.9151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W115</td>\n",
       "        <td>0.2301</td>\n",
       "        <td>0.4301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W116</td>\n",
       "        <td>0.1205</td>\n",
       "        <td>0.4822</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('W1', Decimal('0.0000'), Decimal('0.1616')),\n",
       " ('W10', Decimal('0.1041'), Decimal('0.3479')),\n",
       " ('W100', Decimal('0.0904'), Decimal('0.3973')),\n",
       " ('W101', Decimal('0.1096'), Decimal('0.3644')),\n",
       " ('W102', Decimal('0.0904'), Decimal('0.4110')),\n",
       " ('W103', Decimal('0.1123'), Decimal('0.4110')),\n",
       " ('W104', Decimal('0.1068'), Decimal('0.5260')),\n",
       " ('W105', Decimal('0.1589'), Decimal('0.4329')),\n",
       " ('W106', Decimal('0.1205'), Decimal('0.6959')),\n",
       " ('W107', Decimal('0.2000'), Decimal('0.1096')),\n",
       " ('W108', Decimal('0.0356'), Decimal('0.2247')),\n",
       " ('W109', Decimal('0.0630'), Decimal('0.2192')),\n",
       " ('W11', Decimal('0.1041'), Decimal('0.3918')),\n",
       " ('W110', Decimal('0.0438'), Decimal('0.5370')),\n",
       " ('W111', Decimal('0.1534'), Decimal('0.5123')),\n",
       " ('W112', Decimal('0.1288'), Decimal('0.3616')),\n",
       " ('W113', Decimal('0.1096'), Decimal('0.8438')),\n",
       " ('W114', Decimal('0.2219'), Decimal('0.9151')),\n",
       " ('W115', Decimal('0.2301'), Decimal('0.4301')),\n",
       " ('W116', Decimal('0.1205'), Decimal('0.4822'))]"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT ws_property_id, occupancy_rates_2014, occupancy_rates_2015\n",
    "FROM watershed_property_info wi\n",
    "JOIN (SELECT st_property, location, property_type, \n",
    "             SUM(CASE WHEN YEAR(rental_date) = '2014' THEN 1 ELSE 0 END) / 365 AS occupancy_rates_2014, \n",
    "             SUM(CASE WHEN YEAR(rental_date) = '2015' THEN 1 ELSE 0 END) / 365 AS occupancy_rates_2015\n",
    "      FROM st_rental_dates sd\n",
    "      JOIN st_property_info si\n",
    "      ON sd.st_property = si.st_property_id\n",
    "      GROUP BY st_property) AS o\n",
    "ON wi.location = o.location AND wi.property_type = o.property_type\n",
    "LIMIT 20;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Join All Together"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "20 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>ws_property_id</th>\n",
       "        <th>city</th>\n",
       "        <th>state</th>\n",
       "        <th>zipcode</th>\n",
       "        <th>apt_house</th>\n",
       "        <th>num_bedrooms</th>\n",
       "        <th>kitchen</th>\n",
       "        <th>shared</th>\n",
       "        <th>current_monthly_rent</th>\n",
       "        <th>percentile_10th_price</th>\n",
       "        <th>percentile_90th_price</th>\n",
       "        <th>sample_nightly_rent_price</th>\n",
       "        <th>occupancy_rates</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W1</td>\n",
       "        <td>Chapel Hill</td>\n",
       "        <td>NC</td>\n",
       "        <td>27514</td>\n",
       "        <td>apartment</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1060</td>\n",
       "        <td>114</td>\n",
       "        <td>153</td>\n",
       "        <td>148</td>\n",
       "        <td>0.1616</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W10</td>\n",
       "        <td>Chapel Hill</td>\n",
       "        <td>NC</td>\n",
       "        <td>27517</td>\n",
       "        <td>apartment</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1200</td>\n",
       "        <td>111</td>\n",
       "        <td>149</td>\n",
       "        <td>133</td>\n",
       "        <td>0.3479</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W100</td>\n",
       "        <td>San Francisco</td>\n",
       "        <td>CA</td>\n",
       "        <td>94129</td>\n",
       "        <td>apartment</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>3300</td>\n",
       "        <td>108</td>\n",
       "        <td>610</td>\n",
       "        <td>372</td>\n",
       "        <td>0.3973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W101</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>78702</td>\n",
       "        <td>apartment</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1400</td>\n",
       "        <td>178</td>\n",
       "        <td>533</td>\n",
       "        <td>302</td>\n",
       "        <td>0.3644</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W102</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>78702</td>\n",
       "        <td>apartment</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>2000</td>\n",
       "        <td>221</td>\n",
       "        <td>617</td>\n",
       "        <td>429</td>\n",
       "        <td>0.4110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W103</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>78702</td>\n",
       "        <td>house</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1600</td>\n",
       "        <td>202</td>\n",
       "        <td>646</td>\n",
       "        <td>380</td>\n",
       "        <td>0.4110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W104</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>78702</td>\n",
       "        <td>house</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>2800</td>\n",
       "        <td>197</td>\n",
       "        <td>639</td>\n",
       "        <td>374</td>\n",
       "        <td>0.5260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W105</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>78705</td>\n",
       "        <td>apartment</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1100</td>\n",
       "        <td>114</td>\n",
       "        <td>477</td>\n",
       "        <td>386</td>\n",
       "        <td>0.4329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W106</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>78705</td>\n",
       "        <td>apartment</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1900</td>\n",
       "        <td>80</td>\n",
       "        <td>583</td>\n",
       "        <td>212</td>\n",
       "        <td>0.6959</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W107</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>78705</td>\n",
       "        <td>house</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1800</td>\n",
       "        <td>239</td>\n",
       "        <td>1431</td>\n",
       "        <td>969</td>\n",
       "        <td>0.1096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W108</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>78705</td>\n",
       "        <td>house</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>3200</td>\n",
       "        <td>236</td>\n",
       "        <td>1533</td>\n",
       "        <td>885</td>\n",
       "        <td>0.2247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W109</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>78723</td>\n",
       "        <td>apartment</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1000</td>\n",
       "        <td>138</td>\n",
       "        <td>550</td>\n",
       "        <td>287</td>\n",
       "        <td>0.2192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W11</td>\n",
       "        <td>Chapel Hill</td>\n",
       "        <td>NC</td>\n",
       "        <td>27517</td>\n",
       "        <td>house</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1000</td>\n",
       "        <td>116</td>\n",
       "        <td>296</td>\n",
       "        <td>206</td>\n",
       "        <td>0.3918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W110</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>78723</td>\n",
       "        <td>apartment</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1300</td>\n",
       "        <td>175</td>\n",
       "        <td>917</td>\n",
       "        <td>462</td>\n",
       "        <td>0.5370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W111</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>78723</td>\n",
       "        <td>house</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1200</td>\n",
       "        <td>130</td>\n",
       "        <td>821</td>\n",
       "        <td>389</td>\n",
       "        <td>0.5123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W112</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>78723</td>\n",
       "        <td>house</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1600</td>\n",
       "        <td>241</td>\n",
       "        <td>866</td>\n",
       "        <td>678</td>\n",
       "        <td>0.3616</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W113</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>78744</td>\n",
       "        <td>apartment</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>800</td>\n",
       "        <td>134</td>\n",
       "        <td>288</td>\n",
       "        <td>163</td>\n",
       "        <td>0.8438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W114</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>78744</td>\n",
       "        <td>apartment</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1200</td>\n",
       "        <td>234</td>\n",
       "        <td>794</td>\n",
       "        <td>374</td>\n",
       "        <td>0.9151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W115</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>78744</td>\n",
       "        <td>house</td>\n",
       "        <td>1</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>900</td>\n",
       "        <td>252</td>\n",
       "        <td>547</td>\n",
       "        <td>444</td>\n",
       "        <td>0.4301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W116</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>78744</td>\n",
       "        <td>house</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "        <td>1100</td>\n",
       "        <td>246</td>\n",
       "        <td>616</td>\n",
       "        <td>426</td>\n",
       "        <td>0.4822</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('W1', 'Chapel Hill', 'NC', 27514, 'apartment', '2', 'Y', 'N', 1060, 114, 153, 148, Decimal('0.1616')),\n",
       " ('W10', 'Chapel Hill', 'NC', 27517, 'apartment', '2', 'Y', 'N', 1200, 111, 149, 133, Decimal('0.3479')),\n",
       " ('W100', 'San Francisco', 'CA', 94129, 'apartment', '1', 'Y', 'N', 3300, 108, 610, 372, Decimal('0.3973')),\n",
       " ('W101', 'Austin', 'TX', 78702, 'apartment', '1', 'Y', 'N', 1400, 178, 533, 302, Decimal('0.3644')),\n",
       " ('W102', 'Austin', 'TX', 78702, 'apartment', '2', 'Y', 'N', 2000, 221, 617, 429, Decimal('0.4110')),\n",
       " ('W103', 'Austin', 'TX', 78702, 'house', '1', 'Y', 'N', 1600, 202, 646, 380, Decimal('0.4110')),\n",
       " ('W104', 'Austin', 'TX', 78702, 'house', '2', 'Y', 'N', 2800, 197, 639, 374, Decimal('0.5260')),\n",
       " ('W105', 'Austin', 'TX', 78705, 'apartment', '1', 'Y', 'N', 1100, 114, 477, 386, Decimal('0.4329')),\n",
       " ('W106', 'Austin', 'TX', 78705, 'apartment', '2', 'Y', 'N', 1900, 80, 583, 212, Decimal('0.6959')),\n",
       " ('W107', 'Austin', 'TX', 78705, 'house', '1', 'Y', 'N', 1800, 239, 1431, 969, Decimal('0.1096')),\n",
       " ('W108', 'Austin', 'TX', 78705, 'house', '2', 'Y', 'N', 3200, 236, 1533, 885, Decimal('0.2247')),\n",
       " ('W109', 'Austin', 'TX', 78723, 'apartment', '1', 'Y', 'N', 1000, 138, 550, 287, Decimal('0.2192')),\n",
       " ('W11', 'Chapel Hill', 'NC', 27517, 'house', '1', 'Y', 'N', 1000, 116, 296, 206, Decimal('0.3918')),\n",
       " ('W110', 'Austin', 'TX', 78723, 'apartment', '2', 'Y', 'N', 1300, 175, 917, 462, Decimal('0.5370')),\n",
       " ('W111', 'Austin', 'TX', 78723, 'house', '1', 'Y', 'N', 1200, 130, 821, 389, Decimal('0.5123')),\n",
       " ('W112', 'Austin', 'TX', 78723, 'house', '2', 'Y', 'N', 1600, 241, 866, 678, Decimal('0.3616')),\n",
       " ('W113', 'Austin', 'TX', 78744, 'apartment', '1', 'Y', 'N', 800, 134, 288, 163, Decimal('0.8438')),\n",
       " ('W114', 'Austin', 'TX', 78744, 'apartment', '2', 'Y', 'N', 1200, 234, 794, 374, Decimal('0.9151')),\n",
       " ('W115', 'Austin', 'TX', 78744, 'house', '1', 'Y', 'N', 900, 252, 547, 444, Decimal('0.4301')),\n",
       " ('W116', 'Austin', 'TX', 78744, 'house', '2', 'Y', 'N', 1100, 246, 616, 426, Decimal('0.4822'))]"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT ws_property_id, city, state, zipcode, apt_house, num_bedrooms, kitchen, shared, current_monthly_rent, \n",
    "       sp.percentile_10th_price, sp.percentile_90th_price, sp.sample_nightly_rent_price, occupancy_rates\n",
    "FROM watershed_property_info wi\n",
    "JOIN location l\n",
    "ON wi.location = l.location_id\n",
    "JOIN property_type t\n",
    "ON wi.property_type = t.property_type_id\n",
    "JOIN st_rental_prices sp\n",
    "ON wi.location = sp.location AND wi.property_type = sp.property_type\n",
    "JOIN (SELECT st_property, location, property_type, \n",
    "             SUM(CASE WHEN YEAR(rental_date) = '2015' THEN 1 ELSE 0 END) / 365 AS occupancy_rates\n",
    "      FROM st_rental_dates sd\n",
    "      JOIN st_property_info si\n",
    "      ON sd.st_property = si.st_property_id\n",
    "      GROUP BY st_property) AS o\n",
    "ON wi.location = o.location AND wi.property_type = o.property_type\n",
    "LIMIT 20;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Quiz"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Which of the following things are true about Watershed property W106?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>ws_property_id</th>\n",
       "        <th>city</th>\n",
       "        <th>state</th>\n",
       "        <th>apt_house</th>\n",
       "        <th>num_bedrooms</th>\n",
       "        <th>kitchen</th>\n",
       "        <th>shared</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W106</td>\n",
       "        <td>Austin</td>\n",
       "        <td>TX</td>\n",
       "        <td>apartment</td>\n",
       "        <td>2</td>\n",
       "        <td>Y</td>\n",
       "        <td>N</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('W106', 'Austin', 'TX', 'apartment', '2', 'Y', 'N')]"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT ws_property_id, city, state, apt_house, num_bedrooms, kitchen, shared\n",
    "FROM watershed_property_info wi\n",
    "JOIN location l\n",
    "ON wi.location = l.location_id\n",
    "JOIN property_type t\n",
    "ON wi.property_type = t.property_type_id\n",
    "WHERE ws_property_id = 'W106';"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  Which of the following things are true about the example short-term rental property that has the same type and is found in the same location as Watershed Property W24?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>ws_property_id</th>\n",
       "        <th>sample_nightly_rent_price</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W24</td>\n",
       "        <td>239</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('W24', 239)]"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT ws_property_id, sample_nightly_rent_price\n",
    "FROM watershed_property_info wi\n",
    "JOIN st_rental_prices sp\n",
    "ON wi.location = sp.location AND wi.property_type = sp.property_type\n",
    "WHERE ws_property_id = 'W24';"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>ws_property_id</th>\n",
       "        <th>occupancy_rates</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>W24</td>\n",
       "        <td>0.6767</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('W24', Decimal('0.6767'))]"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT ws_property_id, occupancy_rates\n",
    "FROM watershed_property_info wi\n",
    "JOIN (SELECT st_property, location, property_type, \n",
    "             SUM(CASE WHEN YEAR(rental_date) = '2015' THEN 1 ELSE 0 END) / 365 AS occupancy_rates\n",
    "      FROM st_rental_dates sd\n",
    "      JOIN st_property_info si\n",
    "      ON sd.st_property = si.st_property_id\n",
    "      GROUP BY st_property) AS o\n",
    "ON wi.location = o.location AND wi.property_type = o.property_type\n",
    "WHERE ws_property_id = 'W24';"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### How many of the client’s 244 Watershed properties have kitchens?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>COUNT(DISTINCT ws_property_id)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>244</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(244,)]"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT COUNT(DISTINCT ws_property_id)\n",
    "FROM watershed_property_info wi\n",
    "JOIN property_type t\n",
    "ON wi.property_type = t.property_type_id\n",
    "WHERE kitchen = 'Y';"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Output "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "244 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<a href=\"./files/watershed.csv\">CSV results</a>"
      ],
      "text/plain": [
       "CSV results at /home/jovyan/work/Capstone_course_materials/watershed.csv"
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "watershed = %sql SELECT ws_property_id, city, state, zipcode, apt_house, num_bedrooms, kitchen, shared, current_monthly_rent, \\\n",
    "                        sp.percentile_10th_price, sp.percentile_90th_price, sp.sample_nightly_rent_price, occupancy_rates \\\n",
    "                 FROM watershed_property_info wi \\\n",
    "                 JOIN location l \\\n",
    "                 ON wi.location = l.location_id \\\n",
    "                 JOIN property_type t \\\n",
    "                 ON wi.property_type = t.property_type_id \\\n",
    "                 JOIN st_rental_prices sp \\\n",
    "                 ON wi.location = sp.location AND wi.property_type = sp.property_type \\\n",
    "                 JOIN (SELECT st_property, location, property_type, \\\n",
    "                              SUM(CASE WHEN YEAR(rental_date) = '2015' THEN 1 ELSE 0 END) / 365 AS occupancy_rates \\\n",
    "                       FROM st_rental_dates sd \\\n",
    "                       JOIN st_property_info si \\\n",
    "                       ON sd.st_property = si.st_property_id \\\n",
    "                       GROUP BY st_property) AS o \\\n",
    "ON wi.location = o.location AND wi.property_type = o.property_type;\n",
    "watershed.csv('watershed.csv')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
